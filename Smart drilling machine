// Car drive Motor
#define IN_1  D8          // L298N in1 motors Right           GPIO15(D8)
#define IN_2  D7          // L298N in2 motors Right           GPIO13(D7)
#define IN_3  D4           // L298N in3 motors Left            GPIO2(D4)
#define IN_4  D3           // L298N in4 motors Left            GPIO0(D3)


// Driller Motor
#define IN_5  D1          // L298N in1 motors Right           GPIO15(D8)
#define IN_6  D2          // L298N in2 motors Right           GPIO13(D7)
#define IN_7  D5           // L298N in3 motors Left            GPIO2(D4)
#define IN_8  D6           // L298N in4 motors Left            GPIO0(D3)

#include <ESP8266WiFi.h>
#include <WiFiClient.h> 
#include <ESP8266WebServer.h>


String command;             //String to store app command state.


const char* ssid = "NodeMCU Car";
ESP8266WebServer server(80);

void setup() {
 

 pinMode(IN_1, OUTPUT);
 pinMode(IN_2, OUTPUT);
 pinMode(IN_3, OUTPUT);
 pinMode(IN_4, OUTPUT); 

  pinMode(IN_5, OUTPUT);
 pinMode(IN_6, OUTPUT);
 pinMode(IN_7, OUTPUT);
 pinMode(IN_8, OUTPUT); 
  
  Serial.begin(115200);


  WiFi.mode(WIFI_AP);
  WiFi.softAP(ssid);
  IPAddress myIP = WiFi.softAPIP();
  Serial.print("AP IP address: ");
  Serial.println(myIP);
 
 // Starting WEB-server 
     server.on ( "/", HTTP_handleRoot );
     server.onNotFound ( HTTP_handleRoot );
     server.begin();    
}

void goAhead(){ 

      digitalWrite(IN_1, LOW);
      digitalWrite(IN_2, HIGH);
    

      digitalWrite(IN_3, LOW);
      digitalWrite(IN_4, HIGH);
      


      
  }

void goBack(){ 

      digitalWrite(IN_1, HIGH);
      digitalWrite(IN_2, LOW);
     

      digitalWrite(IN_3, HIGH);
      digitalWrite(IN_4, LOW);
      
  }

void goRight(){ 

      digitalWrite(IN_1, HIGH);
      digitalWrite(IN_2, LOW);
 

      digitalWrite(IN_3, LOW);
      digitalWrite(IN_4, HIGH);
   
  }

void goLeft(){

      digitalWrite(IN_1, LOW);
      digitalWrite(IN_2, HIGH);
 

      digitalWrite(IN_3, HIGH);
      digitalWrite(IN_4, LOW);

  }

void goAheadRight(){
      
      digitalWrite(IN_1, HIGH);
      digitalWrite(IN_2, LOW);
   
 
      digitalWrite(IN_3, LOW);
      digitalWrite(IN_4, HIGH);
   
   }

void goAheadLeft(){
      
      digitalWrite(IN_1, LOW);
      digitalWrite(IN_2, HIGH);
   

      digitalWrite(IN_3, HIGH);
      digitalWrite(IN_4, LOW);

  }

void goBackRight(){ 

      digitalWrite(IN_1, LOW);
      digitalWrite(IN_2, HIGH);


      digitalWrite(IN_3, HIGH);
      digitalWrite(IN_4, LOW);
   
  }

void goBackLeft(){ 

      digitalWrite(IN_1, HIGH);
      digitalWrite(IN_2, LOW);
     

      digitalWrite(IN_3, LOW);
      digitalWrite(IN_4, HIGH);
   
  }

  void goup(){ 

      digitalWrite(IN_5, LOW);
      digitalWrite(IN_6, HIGH);
    

      digitalWrite(IN_7, LOW);
      digitalWrite(IN_8, LOW);
      
      
  }

void godown(){ 

      digitalWrite(IN_5, HIGH);
      digitalWrite(IN_6, LOW);
     

      digitalWrite(IN_7, LOW);
      digitalWrite(IN_8, LOW);
      
  }

  void gostop(){ 

      digitalWrite(IN_5, LOW);
      digitalWrite(IN_6, LOW);
     

      digitalWrite(IN_7, LOW);
      digitalWrite(IN_8, LOW);
      
  }
  
  void gofor(){ 

      digitalWrite(IN_5, LOW);
      digitalWrite(IN_6, LOW);
    

      digitalWrite(IN_7, LOW);
      digitalWrite(IN_8, HIGH);
      
  }

void gorev(){ 

      digitalWrite(IN_5, LOW);
      digitalWrite(IN_6, LOW);
     

      digitalWrite(IN_7, HIGH);
      digitalWrite(IN_8, LOW);
      
  }
void stopRobot(){  

      digitalWrite(IN_1, LOW);
      digitalWrite(IN_2, LOW);


      digitalWrite(IN_3, LOW);
      digitalWrite(IN_4, LOW);



 }

void loop() {
    server.handleClient();
    
      command = server.arg("State");
      if (command == "F") goAhead();
      else if (command == "B") goBack();
      else if (command == "L") goLeft();
      else if (command == "R") goRight();
      else if (command == "I") goAheadRight();
      else if (command == "G") goAheadLeft();
      else if (command == "J") goBackRight();
      else if (command == "H") goBackLeft();
      else if (command == "5") goup();
      else if (command == "8") godown();
      else if (command == "V") gostop();
      else if (command == "W") gofor();
      else if (command == "w") gorev();
    
      else if (command == "S") stopRobot();
   
}

void HTTP_handleRoot(void) {

if( server.hasArg("State") ){
       Serial.println(server.arg("State"));
  }
  server.send ( 200, "text/html", "" );
  delay(1);
}
